#include "stdafx.h"

class CObj
{
public:
	virtual void Func() = 0;
};

class CPlayer : public CObj
{
public:
	virtual void Func()
	{

	}
};

void main()
{
	// 순수 가상 함수
	// 가상 함수가 되게 순수하다!!!!
	// -> 비어 있다!
	// -> 정의부가 없는 가상 함수
	// 정의부가 없는 순수 가상함수라고 알려주기 위해 함수명 뒤에 '= 0'을 붙여준다.


	//// CObj는 순수 가상 함수를 가지고 있다!
	//// -> 추상 클래스가 되었다!
	//CObj	obj;		// 불가능


	// 추상 클래스란?
	// 순수 가상 함수를 단 하나라도 가지고 있는 클래스
	// 추상 클래스가 되면 객체로 만들 수 없다.
	// 단, 객체 포인터로는 사용이 가능하다.


	// 사용자(인간/사람)는 실수하는 동물
	// 부모 클래스에 가상 함수를 만들고 자식 클래스가 오버라이딩하여 사용하는 코드가 있을 때
	// 사용자가 실수로 오버라이딩을 하지 않으면 정상 작동하긴하나 문제가 있다.

	// 이러한 실수를 방지하기 위해 순수 가상 함수를 사용하자!!
	// -> 순수 가상 함수는 자식 클래스에서 무조건 오버라이딩 하여 사용하도록 유도하는 문법
	// 사용자가 자식 클래스에서 오버라이딩을 하지 않을 경우 자식 클래스 또한 추상 클래스가 된다.

	CPlayer		player;

	CObj*		pPlayer = new CPlayer;
	delete pPlayer;

}
#include "stdafx.h"


void main()
{
	// 지역 변수와 전역 변수 
	// 같은 변수 이지만 선언된 위치에 따라 지역 변수와 전역 변수로 구분된다.

	// 지역 변수 : 중괄호 내부에 포함되어 있는 변수
	// 전역 변수 : 어떠한 중괄호 내부에도 포함되지 않는 변수


	// 지역 변수와 전역 변수의 차이점
	// ##1. 변수에 접근할 수 있는 범위.
	// ##2. 메모리에 상주하는 기간의 차이.


	// 지역 변수
	// 중괄호 내부에 선언된 변수

	// 지역 변수는 해당 중괄호 내부에서만 접근이 가능하다!


	// 지역 변수가 등록되는 메모리는 stack 영역이다.
	// stack 영역은 함수가 시작되면 할당되고, 함수가 종료 되면 소멸하는 공간이다.
	// 또한, 다른 stack 영역이 할당될 경우 덮어쓰기 형태로 할당이 된다.
	// -> 한번에 하나의 stack만 확인할수 있다.
	// 결국, 해당 지역에 선언된 변수 외에는 다른 지역의 변수를 확인할 수 없다.

   

	// iA와 iB는 main함수 내부에 선언된 지역 변수이다.
	// main함수를 실행하면서 iA와 iB를 main의 stack에 등록시킨다.
	// 이후, Add 함수를 호출하면서 Add의 stack이 할당되는데 이 때 main의 stack을 가리게 된다.
	// Add함수 내부에서는 iRes라는 변수를 등록시키고, iRes에는 iA와 iB를 더한결과를 저장하고 있다.
	// 하지만, iA와 iB는 main의 stack에 등록되었기 때문에 Add함수의 stack에서는 확인할 수 없다.
	// Add함수가 종료되면 Add함수의 stack이 소멸하게 되어 iRes 또한 없어진다.
	// 마찬가지로 main의 stack에서도 iRes의 존재를 확인할 수 없다.
	int iA = 10, iB = 20;

	Add();
	cout << iRes << endl;

	// 결국, 함수에서 함수로 데이터가 이동해야될 필요가 있을 경우 매개변수와 반환타입을 사용해야한다!



}


void Add()
{
	int iRes = iA + iB;
}
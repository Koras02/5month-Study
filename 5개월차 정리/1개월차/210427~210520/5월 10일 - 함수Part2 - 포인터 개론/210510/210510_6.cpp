#include <iostream>

using namespace std;

void Func(int _n);
void main()
{
	// 포인터
	// 자료형이다.
	// -> 변수와 자료형 배울때와 동일하게 사용한다!
	// -> 쉽다!!

	// 포인터는 어떤 데이터를 저장하는 자료형일까?
	// -> 주소를 저장한다!

	// 주소란?
	// 메모리 영역에는 1byte 단위로 주소가 부여되어 있다!
	// 포인터 변수는 결국 메모리의 주소를 저장하는 변수이다!

	// 포인터가 쉬운 이유
	// 실 생활에서도 다른 곳의 주소는 외우지 않는다!
	// 다른 곳의 주소가 필요할 경우 인터넷에 검색하고 복붙한다.
	// 프로그래밍에서 또한 주소를 외우지 않고 단순히 포인터 변수에 저장해둔다!

	// 포인터는 주소를 어떻게 저장할까?
	// 메모리에 할당된 변수는 자료형으로 크기를 파악할 수 있다.
	// 시작 주소를 알 수 있다면 자료형의 크기로 마지막 메모리 주소를 계산할 수 있다!
	// 사람이 계산할 수 있는 것을 컴퓨터가 계산할 때 더욱 빠르고 정확하게 계산할 수 있다!
	// 결국, 주소는 메모리가 등록된 시작 주소만 저장하겠다!

	// 포인터를 사용하는 이유
	// iA의 값을 증가시키는 코드를 함수로 분리했을 경우
	// 정상적으로 iA가 증가되지 않는다!
	// 복사본의 값을 어떻게 변경시켜도 원본의 값은 유지가 된다!
	// -> 원본의 값을 변경하기 위해서 사용한다.
	
	int		iA = 1;

	//++iA;

	// int _n = iA;		// 복사
	Func(iA);

	cout << "iA: " << iA << endl;
}

void Func(int _n)
{
	++_n;
}